using UnityEngine;

public static class AudioExtensions
{
    /// <summary>
    /// Преобразует значение слайдера громкости (float) в логарифмическую громкость,
    /// обеспечивая более плавное и естественное изменение громкости при перемещении слайдера.
    /// Математические шаги выполняют следующее:
    /// - Гарантирует, что значение слайдера равно или больше 0.0001, чтобы избежать передачи 0 функции логарифма.
    /// - Берет десятичный логарифм значения слайдера.
    /// - Умножает результат на 20. В аудиотехнике изменение на 1 единицу в шкале дБ приблизительно эквивалентно
    /// тому, что человеческое ухо воспринимает как удвоение или уменьшение громкости вдвое, отсюда умножение на 20.
    ///
    /// Этот метод полезен для нормализации UI слайдеров громкости, используемых с Audio Mixer в Unity.
    /// </summary>
    public static float ToLogarithmicVolume(this float sliderValue)
    {
        return Mathf.Log10(Mathf.Max(sliderValue, 0.0001f)) * 20;
    }

    /// <summary>
    /// Преобразует дробное значение в диапазоне [0, 1] в логарифмическую шкалу (также в диапазоне [0, 1]),
    /// имитируя то, как мы слышим громкость (поскольку человеческое восприятие громкости звука является логарифмическим).
    /// Математические шаги выполняют следующее:
    /// - Внутри функции Log10 мы добавляем 9 раз исходную дробь к 1 перед взятием логарифма.
    ///   Это обеспечивает плавное масштабирование дроби по нашей логарифмической кривой, и она вписывается в диапазон [0, 1].
    /// - Берет десятичный логарифм интерполированной дроби.
    /// - Делит результат на Log10(10) просто для нормализации результата и гарантии, что он вписывается в диапазон [0, 1],
    ///   так как вход функции Log10 может варьироваться между 1 и 10 после интерполяции.
    ///
    /// Этот метод полезен для улучшения эффектов затухания между аудиоклипами.
    /// </summary>
    public static float ToLogarithmicFraction(this float fraction)
    {
        return Mathf.Log10(1 + 9 * fraction) / Mathf.Log10(10);
    }
}